global {
    # tproxy port to listen.
    tproxy_port: 12345

    # Node connectivity check.
    check_url: 'https://connectivitycheck.gstatic.com/generate_204'
    check_interval: 30s

    # Now only support UDP and IP:Port.
    # Please make sure DNS traffic will go through and be forwarded by dae.
    # The request to dns upstream follows routing defined below.
    dns_upstream: '1.1.1.1:53'

    # The LAN interface to bind.
    # Use it if you only want to proxy LAN instead of localhost.
    # Now only support one interface.
    # lan_interface: docker0

    # The WAN interface to bind.
    # Use it if you want to proxy localhost.
    wan_interface: wlp5s0
}

# subscription will be resolved as nodes and merged into node pool below.
subscription {
    # Add your subscription links here.
}

node {
    # Add your node links here.
    # Support socks5, http, https, ss, ssr, vmess, vless, trojan, trojan-go
    'socks5://localhost:1080'
    'ss://LINK'
}

group {
    my_group {
        # Pass node links as input of lua script filter.
        filter: name(keyword: HK, keyword: SH)

        # Randomly select a node from the group for every connection.
        # policy: random

        # Select the first node from the group for every connection.
        policy: fixed(0)
    }
}

routing {
    # See routing.md for full examples.
    ip(1.1.1.1) && port(53) -> my_group
    pname(firefox) && domain(ip.sb) -> direct
    pname(curl) && domain(ip.sb) -> my_group

    ip(geoip:private) -> direct
    ip(geoip:cn) -> direct
    domain(geosite:cn) -> direct
    final: my_group
}
